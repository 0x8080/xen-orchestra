!function(){var Subset={};function xor(a,b){return _.difference(_.union(a,b),_.intersection(a,b))}Backbone.Subset=function Subset(models,options){var parent;options=options||{};if(options.parent){this.parent=options.parent}if(!(parent=_.result(this,"parent"))){throw new Error("Can't create a subset without a parent collection")}this.model=parent.model;this.comparator=this.comparator||options.comparator||parent.comparator;this.liveupdate_keys=this.liveupdate_keys||options.liveupdate_keys||"none";_.bindAll(this,"_onModelEvent","_unbindModelEvents","_proxyAdd","_proxyReset","_proxyRemove","_proxyChange");parent.bind("add",this._proxyAdd);parent.bind("remove",this._proxyRemove);parent.bind("reset",this._proxyReset);parent.bind("all",this._proxyChange);if(this.beforeInitialize){this.beforeInitialize.apply(this,arguments)}if(!options.no_reset){this._reset();this.reset(models||parent.models,{silent:true})}else{this._resetSubset({silent:true})}this.initialize.apply(this,arguments)};Subset.exclusiveSubset=function(){return false};Subset.reset=function(models,options){var parent=_.result(this,"parent"),parent_models=_.clone(parent.models),xored_ids,ids=this.pluck("id");models=models||[];models=_.isArray(models)?models:[models];options=options||{};parent_models=_.reject(parent_models,function(model){return _.include(ids,model.id)});_.each(models,function(model){parent_models.push(model)});xored_ids=xor(ids,_.pluck(models,"id"));parent.reset(parent_models,_.extend({silent:true},options));if(this.exclusiveSubset()){parent.trigger("reset",this,_.extend({model_ids:xored_ids,exclusive_collection:this},options))}else{parent.trigger("reset",this,_.extend({model_ids:xored_ids},options))}return this};Subset.recalculate=function(options){options=options||{};var changed,self=this;changed=_.result(this,"parent").reduce(function(changed,model){return self._updateModelMembership(model,{silent:true})||changed},false);if(changed&&!options.silent){this.trigger("reset",this,options)}return this};Subset._resetSubset=function(options){options=options||{};this.each(this._unbindModelEvents);this._reset();_.result(this,"parent").each(function(model){this._addToSubset(model,{silent:true})},this);if(!options.silent){this.trigger("reset",this,options)}return this};Subset.add=function(model,options){if(this.exclusiveSubset()){options=_.extend(options,{exclusive_collection:this})}return _.result(this,"parent").add(model,options)};Subset._addToSubset=function(model,options){if(this.sieve(model)){return Backbone.Collection.prototype.add.call(this,model,options)}};Subset.remove=function(model,options){if(this.exclusiveSubset()){options=_.extend(options,{exclusive_collection:this})}return _.result(this,"parent").remove(model,options)};Subset._removeFromSubset=function(model,options){return Backbone.Collection.prototype.remove.call(this,model,options)};Subset._prepareModel=function(model,options){var parent=_.result(this,"parent");if(!(model instanceof Backbone.Model)){var attrs=model;model=new this.model(attrs,{collection:parent});if(model.validate&&!model._performValidation(model.attributes,options)){model=false}}else if(!model.collection){model.collection=parent}model=this.sieve(model)?model:false;return model};Subset._proxyAdd=function(model,collection,options){options=options||{};if(options.exclusive_collection&&options.exclusive_collection!==this){return}if(collection!==this&&this.sieve(model)&&!options.noproxy){this._addToSubset(model,options)}};Subset._proxyRemove=function(model,collection,options){options=options||{};if(options.exclusive_collection&&options.exclusive_collection!==this){return}if(collection!==this&&this.sieve(model)&&!options.noproxy){this._removeFromSubset(model,options)}};Subset._proxyChange=function(ev,model,collection){if(collection!==this&&ev==="change"&&this.liveupdate_keys==="all"){this._updateModelMembership(model)}else if(ev.slice(0,7)==="change:"&&_.isArray(this.liveupdate_keys)&&_.include(this.liveupdate_keys,ev.slice(7))){this._updateModelMembership(model)}};Subset._proxyReset=function(collection,options){options=options||{};var sieved_models,self=this;if(options.exclusive_collection&&options.exclusive_collection!==this){return}function getSievedModels(){return _.filter(options.model_ids,function(id){var model=self.parent().get(id)||self.get(id);return model&&self.sieve(model)})}if((!options||!options.noproxy)&&(!options.model_ids||this===collection||getSievedModels().length)){this._resetSubset(_.extend(_.clone(options),{proxied:true}))}};Subset._updateModelMembership=function(model,options){var hasId=!model.id,alreadyInSubset=this._byCid[model.cid]||hasId&&this._byId[model.id];if(this.sieve(model)){if(!alreadyInSubset){this._addToSubset(model,options);return true}}else{if(alreadyInSubset){this._removeFromSubset(model,options);return true}}return false};Subset._unbindModelEvents=function(model){model.unbind("all",this._onModelEvent)};_.extend(Backbone.Subset.prototype,Backbone.Collection.prototype,Subset);Backbone.Subset.extend=Backbone.Collection.extend}();
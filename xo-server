#!/usr/bin/php
<?php
/**
 * This file is a part of Xen Orchestra Server.
 *
 * Xen Orchestra Server is free software: you can redistribute it
 * and/or modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation, either version 3 of
 * the License, or (at your option) any later version.
 *
 * Xen Orchestra Server is distributed in the hope that it will be
 * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
 * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Xen Orchestra Server. If not, see
 * <http://www.gnu.org/licenses/>.
 *
 * @author Julien Fontanet <julien.fontanet@vates.fr>
 * @license http://www.gnu.org/licenses/gpl-3.0-standalone.html GPLv3
 *
 * @package Xen Orchestra Server
 */

/**
 * Bootstraps and returns the application singleton.
 */
function _bootstrap()
{
	static $application;

	if (!isset($application))
	{
		// Variables definition.
		$root_dir = defined('__DIR__')
			? __DIR__
			: dirname(__FILE__)
			;

		// Class autoloading is done by composer.
		require($root_dir.'/vendor/autoload.php');

		// Reads configuration.
		$config = new Config(array_merge_recursive(
			require($root_dir.'/config/global.php'),
			require($root_dir.'/config/local.php')
		));

		// Injects some variables.
		$config->set('root_dir', $root_dir);

		// Dependency injector.
		$di = new DI;
		$di->set('config', $config);

		// Logs all errors.
		$error_logger = $di->get('error_logger');
		set_error_handler(array($error_logger, 'log'));
		register_shutdown_function(array($error_logger, 'handleShutdown'));

		// Finally, creates the application.
		$application = $di->get('application');
	}

	return $application;
}

_bootstrap()->run();

// Local Variables:
// mode: php
// End:

import _ from 'messages'
import map from 'lodash/map'
import React from 'react'
import Icon from 'icon'
import {
  Button,
  ButtonToolbar,
  SplitButton,
  MenuItem
} from 'react-bootstrap-4/lib'

const ActionBar = ({ actions, display = 'both' }) => (
  <ButtonToolbar>
    {map(actions, (action, index) =>
      !action.dropdownItems
      ? <Button bsStyle='secondary' key={index} onClick={() => action.handler()}>
        <Content display={display} label={action.label} icon={action.icon} />
      </Button>
      : <SplitButton bsStyle='secondary' key={index} id={`split-button-${index}`} title={<Content display={display} label={action.label} icon={action.icon} />}>
        {map(action.dropdownItems, ({label, icon, handler}, index) => (
          <MenuItem key={index} eventKey={index}>
            <Content display={display} label={label} icon={icon} />
          </MenuItem>
        ))}
      </SplitButton>
    )}
  </ButtonToolbar>
)
ActionBar.propTypes = {
  actions: React.PropTypes.arrayOf(
    React.PropTypes.shape({
      label: React.PropTypes.string.isRequired,
      icon: React.PropTypes.string.isRequired,
      handler: React.PropTypes.func,
      dropdownItems: React.PropTypes.array
    })
  ).isRequired,
  display: React.PropTypes.oneOf(['icon', 'text', 'both'])
}
export default ActionBar

const Content = ({display, icon, label}) => (
  <span>
    {icon && (display === 'icon' || display === 'both') ? <Icon icon={icon} /> : null}
    {label && (display === 'text' || display === 'both') ? [' ', _(label)] : null}
  </span>
)

// actions:
// [
//   {label: 'Action1', icon: 'Icon1', handler: 'MyAction1'},
//   {
//     icon: 'MainIcon',
//     label: 'MainLabel',
//     items: [
//       {icon: 'Icon2', label: 'Action2', handler: 'MyAction2'},
//       {icon: 'Icon3', label: 'Action3', handler: 'MyAction3'}
//     ]
//   }
// ]

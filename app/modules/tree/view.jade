//- @todo Remove code duplication for the VMs listing by using a macro.
.sub-bar
  .grid
    .grid-cell.overview
      //- Stats
      i(tooltip="{{xo.pools.length}} pools")
        i.small {{xo.pools.length}}x
        | &nbsp;
        i.xo-icon-pool
      | &nbsp;
      | &nbsp;
      i(tooltip="{{hosts.length}} hosts")
        i.small {{hosts.length}}x
        | &nbsp;
        i.xo-icon-host
      | &nbsp;
      | &nbsp;
      i(tooltip="{{xo.$running_VMs.length}} of {{VMs.length}} VMs running")
        i.small {{xo.$running_VMs.length}}x
        | &nbsp;
        i.xo-icon-vm
      | &nbsp;
      | &nbsp;
      i(tooltip="{{xo.$vCPUs}} vCPUs used of {{xo.$CPUs}} CPUs")
        i.small {{xo.$vCPUs}}x
        | &nbsp;
        i.xo-icon-cpu
      | &nbsp;
      | &nbsp;
      i(tooltip="{{xo.$memory.usage | bytesToSize}} RAM allocated of {{xo.$memory.size | bytesToSize}}")
        i.small {{xo.$memory.usage | bytesToSize}}
        | &nbsp;
        i.xo-icon-memory
    .grid-cell
      .btn-group.before-action-bar.dropdown(dropdown)
        a.btn.navbar-btn.btn-default.dropdown-toggle.inversed(dropdown-toggle)
          input.inverse(type="checkbox", ng-model="master_selection", ng-change="selectVMs(master_selection)", ui-indeterminate="!(all || none)", stop-event="click")
          | &nbsp;
          i.fa.fa-caret-down
        ul.dropdown-menu.inverse(role="menu")
          li(ng-repeat="power_state in ['Halted', 'Running']")
            a(ng-click="selectVMs({power_state: power_state})")
              i.fa-fw(class="xo-icon-{{power_state | lowercase}}")
              |  {{power_state}}
          li.divider
          li(ng-repeat="host in hosts | orderBy:natural('name_label') track by host.UUID", ng-if="host.VMs.length")
            a(ng-click="selectVMs({$container: host.ref})")
              i.xo-icon-host.fa-fw
              |  On {{host.name_label}}
      .action-bar(ng-if="!none")
        | &nbsp;
        .btn-group
          button.btn.navbar-btn.btn-default.inversed(tooltip="Stop VM", type="button", ng-click="bulkAction('stopVM')")
            i.fa.fa-stop
          button.btn.navbar-btn.btn-default.inversed(tooltip="Start VM", type="button", ng-click="bulkAction('startVM')")
            i.fa.fa-play
          button.btn.navbar-btn.btn-default.inversed(tooltip="Reboot VM", type="button", ng-click="bulkAction('rebootVM')")
            i.fa.fa-refresh
        | &nbsp;
        .btn-group.dropdown(dropdown)
          button.btn.navbar-btn.btn-default.dropdown-toggle.inversed(
            dropdown-toggle
            tooltip="Migrate VM"
            type="button"
          )
            i.fa.fa-share
              | &nbsp;
            i.fa.fa-caret-down
          ul.dropdown-menu.inverse(role="menu")
            li(ng-repeat="host in hosts | orderBy:natural('name_label') track by host.UUID")
              a(ng-click="bulkAction('migrateVM',host.UUID)")
                i.xo-icon-host.fa-fw
                |  To {{host.name_label}}
        | &nbsp;
        .btn-group.dropdown(dropdown)
          button.btn.navbar-btn.btn-default.dropdown-toggle.inversed(
            dropdown-toggle
            type="button"
          )
            | More
            | &nbsp;
            i.fa.fa-caret-down
          ul.dropdown-menu.inverse(role="menu")
            li
              a(ng-click="bulkAction('suspendVM')")
                i.fa.fa-pause.fa-fw
                |  Suspend
            li
              a(ng-click="bulkAction('resumeVM')")
                i.fa.fa-play.fa-fw
                |  Resume
            li
              a(ng-click="bulkAction('force_rebootVM')")
                i.fa.fa-bolt.fa-fw
                |  Force reboot
            li
              a(ng-click="bulkAction('force_stopVM')")
                i.fa.fa-power-off.fa-fw
                |  Force shutdown
            li.divider
            li
              a(ng-click="bulkAction('snapshotVM')")
                i.xo-icon-snapshot.fa-fw
                |  Take a snapshot
            li
              a(ng-click="deleteVMs()")
                i.fa.fa-trash-o.fa-fw
                |  Delete

//- FIXME: Ugly trick to force the pools to be under the sub bar.
//- Add +7px to the 50px for having some space before the first pool.
div(style="margin-top: 57px; visibility: hidden; height: 0") .

//- If we haven't any data
div(ng-if="!pools.length")
  .grid
    .panel.panel-default.text-center
      h1 Welcome on Xen Orchestra!
      h3 It seems you aren't connected to any Xen server:
      br
      a.btn.btn-success.big(ui-sref="settings")
        i.fa.fa-plus-circle
        |  Add server
      br
      br
      br
      p You can add a new host anytime by clicking on the menu icon "
          i.fa.fa-th
          | " and choose "
          i.fa.fa-cog
          |  Settings"
      p Enjoy Xen Orchestra!
//- If we have data
div(ng-if="pools.length")
  //- Contains a pool and all its children (hosts).
  .grid.pool-block(ng-repeat="pool in pools | orderBy:[natural('name_label'), 'id'] track by pool.UUID")
    //- Pseudo pool if it is not a named pool.
    //- .grid-cell.grid--gutters.pool-cell(ng-if="!pool.name_label")
    //-   p.center(style="margin-top: 2em;") No pool connected
    //- Contains information about the pool if it is a named pool.
    .grid-cell.grid--gutters.pool-cell
      //- Header (name + dropdown menu).
      .dropdown.dropdown-pool(dropdown)
        a.pool-name(ui-sref="pools_view({id: pool.UUID})")
          span(ng-if="pool.name_label")
            | {{pool.name_label}}
          span.text-muted(ng-if="!pool.name_label")
            | {{(pool.master | resolve).name_label}}
        a.dropdown-toggle(ng-if="pool.name_label", dropdown-toggle)
          | &nbsp;
          i.fa.fa-caret-down.big-caret
        ul.dropdown-menu.left(role="menu")
          //- TODO: remove until handled this properly
          //- li
          //-   a(xo-sref="SRs_new({container: pool.UUID})")
          //-     i.xo-icon-sr.fa-fw
          //-     |  Add SR
          li
            a(xo-sref="VMs_new({container: pool.UUID})")
              i.xo-icon-vm.fa-fw
              |  Create VM
          //- TODO: solve the "a" problem for ng-file-select
          li(ng-file-select="patchPool($files, pool.UUID)")
            a
              i.fa.fa-file-code-o.fa-fw
              |  Patch
          li.divider
          li
            a.disabled(xo-click="pool_disconnect(pool.UUID)")
              i.fa.fa-unlink.fa-fw
              |  Disconnect
      //- /Header.
      //- Stats & SRs list.
      div
        //- Stats.
        ul.list-unstyled.stats
          li
            i(tooltip="{{pool.hosts.length}} hosts connected")
              i.small {{pool.hosts.length}}x
              | &nbsp;
              i.xo-icon-host
              | &nbsp;
              | &nbsp;
            i(tooltip="{{pool.$running_VMs.length}} of {{pool.$VMs.length}} VMs running")
              i.small {{pool.$running_VMs.length}}x
              | &nbsp;
              i.xo-icon-vm
          li(ng-if="pool.master")
            | Master:
            | &nbsp;
            a(ui-sref="hosts_view({id: (pool.master | resolve).UUID})") {{(pool.master | resolve).name_label}}
        //- /Stats.
        //- SRs.
        div(ng-if="pool.SRs.length")
          p.center.small-caps SRs:
          table.table.table-hover.table-condensed
            tr(ng-repeat="SR in pool.SRs | resolve | orderBy:natural('name_label') track by SR.UUID", xo-sref="SRs_view({id: SR.UUID})")
              td.col-md-6.sr-name.no-border(ng-class="{'default-sr': SR.ref === pool.default_SR}", title="{{SR.name_label}}")
                i.xo-icon-sr
                |  {{SR.name_label}}
              td.col-md-6.right.no-border
                .progress.progress-small(tooltip="Disk: {{[SR.usage, SR.size] | %}} allocated")
                  .progress-bar(role="progressbar", aria-valuenow="{{100*SR.usage/SR.size}}", aria-valuemin="0", aria-valuemax="100", style="width: {{[SR.usage, SR.size] | %}}")
    //- Contains all the hosts of this pool.
    .grid-cell.grid--gutters.hosts-vms-cells
      //- Contains a host and all its children (VMs).
      .grid(ng-repeat="host in pool.hosts | resolve | orderBy:natural('name_label') track by host.UUID")
        //- Contains information about the host.
        .grid-cell.grid--gutters.host-cell
          //- Header (name + dropdown menu).
          .dropdown.dropdown-pool(dropdown)
            a.host-name(ui-sref="hosts_view({id: host.UUID})")
              | {{host.name_label}}
            a.dropdown-toggle(dropdown-toggle)
              | &nbsp;
              i.fa.fa-caret-down
            ul.dropdown-menu.left(role="menu")
              li
                a(xo-sref="SRs_new({container: host.UUID})")
                  i.xo-icon-sr.fa-fw
                  |  Add SR
              li
                a(xo-sref="VMs_new({container: host.UUID})")
                  i.xo-icon-vm.fa-fw
                  |  Create VM
              //- TODO: solve the "a" problem for ng-file-select
              li(ng-file-select="importVm($files, host.UUID)")
                a
                  i.fa.fa-upload.fa-fw
                  |  Import VM
              li.divider
              li
                a(ng-repeat="controller in [host.controller] | resolve track by controller.UUID", xo-sref="consoles_view({id: controller.UUID})")
                  i.xo-icon-console.fa-fw
                  |  Console
              li(ng-if="!host.enabled")
                a(xo-click="enableHost(host.UUID)")
                  i.fa.fa-check-circle.fa-fw
                  |  Enable
              li(ng-if="host.enabled")
                a(xo-click="disableHost(host.UUID)")
                  i.fa.fa-times-circle.fa-fw
                  |  Disable
              li
                a(xo-click="rebootHost(host.UUID)")
                  i.fa.fa-refresh.fa-fw
                  |  Reboot
              li(ng-if="host.power_state === 'Halted'")
                a(xo-click="startHost(host.UUID)")
                  i.fa.fa-power-off.fa-fw
                  |  Start
              li(ng-if="host.power_state === 'Running'")
                a(xo-click="shutdownHost(host.UUID)")
                  i.fa.fa-power-off.fa-fw
                  |  Shutdown
              li
                a(xo-click="restartToolStack(host.UUID)")
                  i.fa.fa-retweet.fa-fw
                  |  Restart toolstack
              li(ng-if="pool.name_label")
                a(xo-click="pool_removeHost(host.UUID)")
                  i.fa.fa-cloud-upload.fa-fw
                  |  Remove from pool
              li(ng-if="!pool.name_label")
                a(xo-click="pool_addHost(host.UUID)")
                  i.fa.fa-cloud-download.fa-fw
                  |  Add to pool
          //- /Header.
          //- Stats.
          ul.list-unstyled.stats
            //- Warning icon if host is halted or disabled
            li.text-danger(ng-if="host.power_state === 'Halted'")
              i.fa.fa-warning
              |  Halted
            li.text-warning(ng-if="!host.enabled && host.power_state === 'Running'")
              i.fa.fa-warning
              |  Disabled
            //- Memory
            li(ng-if="host.power_state === 'Running' && host.enabled")
              i.xo-icon-memory.i-progress
              .progress.progress-small(tooltip="RAM: {{[host.memory.usage, host.memory.size] | %}} allocated")
                .progress-bar(role="progressbar", aria-valuenow="{{100*host.memory.usage/host.memory.size}}", aria-valuemin="0", aria-valuemax="100", style="width: {{[host.memory.usage, host.memory.size] | %}}")
            //- Host address
            li.text-muted.substats
              i.xo-icon-network
              |  {{host.address}}
        //- Contains all the VMs of this host.
        .grid-cell.grid--gutters.vm-cell
          //- If no VMs, fill the space with a message.
          .vms-notice(ng-if="!host.VMs.length")
            //-  | Host halted.
            p(ng-if="host.power_state === 'Halted'")
              | Host halted.
            div(ng-if="host.power_state === 'Running'")
              p(ng-if="!host.enabled")
                | Host disabled.
              p(ng-if="host.enabled")
                | No VMs on this host.
          //- /Message if no VMs.
          //- TODO: comment
          .table-responsive(ng-if="host.VMs.length")
            table.table.table-hover.table-condensed
              //- Contains a VM.
              tr(ng-repeat="VM in host.VMs | resolve | orderBy:natural('name_label') track by VM.UUID", xo-sref="VMs_view({id: VM.UUID})")
                //- Handle used for drag & drop.
                td.grab
                //- Checkbox used for selection.
                td.select-vm
                  input(type="checkbox", ng-model="selected_VMs[VM.UUID]", ng-change="updateVMSelection(VM.UUID)")
                //- Power state
                td.vm-power-state
                  i.xo-icon-working(ng-if="isVMWorking(VM)", tooltip="{{VM.power_state}} and {{values(VM.current_operations)[0]}}")
                  i(class="xo-icon-{{VM.power_state | lowercase}}",ng-if="!isVMWorking(VM)", tooltip="{{VM.power_state}}")
                //- VM name.
                td.vm-name.col-md-2
                  p.vm {{VM.name_label}}
                //- Quick actions.
                td.vm-quick-buttons.col-md-2
                  .quick-buttons
                    a(tooltip="Shutdown VM", xo-click="stopVM(VM.UUID)")
                      i.fa.fa-stop
                    a(tooltip="Start VM", xo-click="startVM(VM.UUID)")
                      i.fa.fa-play
                    a(tooltip="Reboot VM", xo-click="rebootVM(VM.UUID)")
                      i.fa.fa-refresh
                    a(tooltip="VM Console", xo-sref="consoles_view({id: VM.UUID})")
                      i.xo-icon-console
                //- Description.
                td.vm-description.col-md-4
                  i(class="xo-icon-{{osType(VM.os_version.distro)}}",ng-if="VM.os_version.distro", tooltip="{{VM.os_version.name}}")
                    | &nbsp;
                  i.fa.fa-fw(ng-if="!VM.os_version.distro")
                  | {{VM.name_description}}
                //- Metrics.
                //- Memory
                td.vm-memory-stat.col-md-2
                  .cpu
                    | {{VM.memory.size | bytesToSize}}
                  i.fa.fa-fw(ng-if="VM.PV_drivers")
                  i.xo-icon-info.fa-fw(ng-if="!VM.PV_drivers", tooltip="Xen tools not installed")
                //- /Metrics.
                //- Address.
                td.text-muted.text-right.col-md-2
                  | {{VM.addresses["0/ip"]}}
      //- Contains a pseudo-host which contains all VMs not in any hosts.
      .grid(ng-if="pool.VMs.length")
        //- This is where the information about a host would be displayed.
        .grid-cell.host-cell
        //- Contains all the VMs of this pool.
        .grid.grid-cell.vm-cell
          //- TODO: comment
          .table-responsive
            table.table.table-hover.table-condensed
              //- Contains a VM.
              tr(ng-repeat="VM in pool.VMs | resolve | orderBy:natural('name_label') track by VM.UUID", xo-sref="VMs_view({id: VM.UUID})")
                //- Handle used for drag & drop.
                td.grab
                //- Checkbox used for selection.
                td.select-vm
                  input(type="checkbox", ng-model="selected_VMs[VM.UUID]", ng-change="updateVMSelection(VM.UUID)")
                //- Power state
                td.vm-power-state
                  i.xo-icon-working(ng-if="isVMWorking(VM)", tooltip="{{VM.power_state}} and {{values(VM.current_operations)[0]}}")
                  i(class="xo-icon-{{VM.power_state | lowercase}}",ng-if="!isVMWorking(VM)", tooltip="{{VM.power_state}}")
                //- VM name.
                td.vm-name.col-md-2
                  p.vm {{VM.name_label}}
                //- Quick actions.
                td.vm-quick-buttons.col-md-2
                  .quick-buttons
                    a(tooltip="Shutdown VM", xo-click="stopVM(VM.UUID)")
                      i.fa.fa-stop
                    a(ng-if="VM.power_state == 'Suspended'", tooltip="Resume VM", xo-click="resumeVM(VM.UUID)")
                      i.fa.fa-play
                    a(ng-if="VM.power_state != 'Suspended'", tooltip="Start VM", xo-click="startVM(VM.UUID)")
                      i.fa.fa-play
                    a(tooltip="Reboot VM", xo-click="rebootVM(VM.UUID)")
                      i.fa.fa-refresh
                    a(tooltip="VM Console")
                      i.xo-icon-console
                //- Description.
                td.vm-description.col-md-4
                  i(class="xo-icon-{{osType(VM.os_version.distro)}}",ng-if="VM.os_version.distro", tooltip="{{VM.os_version.name}}")
                    | &nbsp;
                  i.fa.fa-fw(ng-if="!VM.os_version.distro")
                  | {{VM.name_description}}
                //- Metrics.
                //- Memory
                td.vm-memory-stat.col-md-2
                  .cpu
                    | {{VM.memory.size | bytesToSize}}
                  i.fa.fa-fw(ng-if="VM.PV_drivers")
                  i.xo-icon-info.fa-fw(ng-if="!VM.PV_drivers", tooltip="Xen tools not installed")
                //- /Metrics.
                //- Address.
                td.text-muted.text-right.col-md-2
                  | {{VM.addresses["0/ip"]}}
        //- /Pseudo host containing VMs not on any hosts.
      //- /Hosts of this pool.
    //- /Pool with its children.

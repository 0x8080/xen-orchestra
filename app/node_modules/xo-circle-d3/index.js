'use strict'

import angular from 'angular'
import clone from 'lodash.clonedeep'
import d3 from 'd3'

export default angular.module('xoCirlcleD3', [])
  .directive('circleChart', function ($parse) {
    function link (scope, element, attrs) {
      console.log('lnked')
      var width,
        color_scale,
        svg

      width = attrs.width ? parseInt(attrs.width, 10) : 2000
      color_scale = d3.scale.category10()

      // took responsive svg trick from http://demosthenes.info/blog/744/Make-SVG-Responsive
      svg = d3.select(element[0])
        .append('div')
        .attr('style', 'position: relative;width: 90%;padding-bottom: 100%;margin-left:5%; vertical-align: middle;overflow: hidden;')
        .append('svg')
        .attr('style', 'display: block;position: absolute; top: 0;left: 0;')
        .attr('width', '100%')
        .attr('height', '100%')
        .attr('preserveAspectRatio', 'xMinYMin meet')
        .attr('viewBox', '0 0 2000 2000')
        .append('g')
        // .attr('transform', 'translate(' + width / 2 + ',' + height * 0.52 + ')')

      const pack = d3.layout.pack()
          .padding(2)
          .size([2000, 2000])
          .value(function (d) { return d.size })

      scope.$watch(() => scope.chartData, function (newVal) {
        let root = clone(newVal)
        var node = svg
          .datum(root)
          .selectAll('.node')
          .data(pack.nodes)
          .enter()
          .append('g')
          .attr('class', (d) => d.children ? 'node' : 'leaf node')
          .attr('transform', (d) => 'translate(' + d.x + ',' + d.y + ')')
          .style('fill', color)

        node.append('title')
            .text((d) => d.name + ': ' + (d.textSize || d.size || ''))

        node.append('circle')
            .attr('r', (d) => d.r)

        node
          .filter((d) => !d.children)
          .append('text')
          .attr('dy', '.3em')
          .style('text-anchor', 'middle')
          .text((d) => d.name)
          .style('font-size', (width / 50) + 'px')
          .style('fill', 'black')

        svg.selectAll('circle').style({
          'fill-opacity': 0.25,
          'stroke': 'rgb(31, 119, 180)',
          'stroke-width': (width / 600) + 'px'
        })

        svg.selectAll('.leaf circle').style({
          'fill-opacity': 1
        })
      })

      function color (d) {
        if (d.color) {
          return d.color
        }
        return color_scale((d.children ? d : d.parent).name)
      }
    }

    return {
      resctict: 'E',
      replace: false,
      scope: {
        chartData: '=',
        selected: '=',
        log: '=',
        over: '&',
        click: '&'
      },
      link: link
    }
  })
  // A module exports its name.
  .name
